{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.cartKey = 'myCart';\n      this.items = [];\n      this.cartItemsSubject = new Subject();\n      this.TotalPrice = 0;\n      const cartData = localStorage.getItem(this.cartKey);\n      if (cartData) {\n        this.items = JSON.parse(cartData);\n      }\n    }\n    addToCart(product) {\n      const IndiceProdotto = this.items.findIndex(item => item.id === product.id);\n      if (IndiceProdotto === -1) {\n        this.items.push({\n          ...product,\n          quantity: 1\n        });\n      } else {\n        this.items[IndiceProdotto].quantity++;\n      }\n      localStorage.setItem(this.cartKey, JSON.stringify(this.items));\n      this.cartItemsSubject.next(this.items);\n    }\n    getItems() {\n      return this.items;\n    }\n    setCartItems(items) {\n      this.cartItemsSubject.next(items);\n    }\n    clearCart() {\n      this.items = [];\n      this.cartItemsSubject.next(this.items);\n      localStorage.removeItem(this.cartKey);\n    }\n    incrementQuantity(product) {\n      const IndiceProdotto = this.items.findIndex(item => item.id === product.id);\n      if (IndiceProdotto !== -1) {\n        this.items[IndiceProdotto].quantity++;\n        localStorage.setItem(this.cartKey, JSON.stringify(this.items));\n      }\n      this.cartItemsSubject.next(this.items);\n    }\n    decrementQuantity(product) {\n      const IndiceProdotto = this.items.findIndex(item => item.id === product.id);\n      if (IndiceProdotto !== -1) {\n        if (this.items[IndiceProdotto].quantity > 1) {\n          this.items[IndiceProdotto].quantity--;\n          localStorage.setItem(this.cartKey, JSON.stringify(this.items));\n        } else {\n          this.removeFromCart(product);\n        }\n      }\n      this.cartItemsSubject.next(this.items);\n    }\n    totalCartPrice() {\n      this.cartItemsSubject.next(this.items);\n      return this.items.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    }\n    totalCartQuantity() {\n      this.cartItemsSubject.next(this.items);\n      return this.items.reduce((acc, item) => acc + item.quantity, 0);\n    }\n    removeFromCart(product) {\n      const index = this.items.findIndex(item => item.id === product.id);\n      if (index !== -1) {\n        if (this.items[index].quantity === 1) {\n          this.items.splice(index, 1);\n        } else {\n          this.items[index].quantity--;\n        }\n        localStorage.setItem(this.cartKey, JSON.stringify(this.items));\n      }\n      this.cartItemsSubject.next(this.items);\n    }\n    deleteProduct(product) {\n      let index = this.items.findIndex(item => item.id === product.id);\n      if (this.items[index].quantity === 1) {\n        this.items.splice(index, 1);\n      }\n    }\n  }\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}